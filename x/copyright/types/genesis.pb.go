// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the capability module's genesis state.
type GenesisState struct {
	// this line is used by starport scaffolding # genesis/proto/state
	AccountSpace         []AccountSpace  `protobuf:"bytes,1,rep,name=accountSpace,proto3" json:"accountSpace"`
	AccountInvite        []AccountInvite `protobuf:"bytes,2,rep,name=accountInvite,proto3" json:"accountInvite"`
	DeflationInfor       DeflationInfor  `protobuf:"bytes,3,opt,name=deflationInfor,proto3" json:"deflationInfor"`
	InviteRecords        []InviteRecords `protobuf:"bytes,4,rep,name=inviteRecords,proto3" json:"inviteRecords"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetAccountSpace() []AccountSpace {
	if m != nil {
		return m.AccountSpace
	}
	return nil
}

func (m *GenesisState) GetAccountInvite() []AccountInvite {
	if m != nil {
		return m.AccountInvite
	}
	return nil
}

func (m *GenesisState) GetDeflationInfor() DeflationInfor {
	if m != nil {
		return m.DeflationInfor
	}
	return DeflationInfor{}
}

func (m *GenesisState) GetInviteRecords() []InviteRecords {
	if m != nil {
		return m.InviteRecords
	}
	return nil
}

type AccountSpace struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	SpaceTotal           string   `protobuf:"bytes,2,opt,name=SpaceTotal,proto3" json:"SpaceTotal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountSpace) Reset()         { *m = AccountSpace{} }
func (m *AccountSpace) String() string { return proto.CompactTextString(m) }
func (*AccountSpace) ProtoMessage()    {}
func (*AccountSpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{1}
}
func (m *AccountSpace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSpace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSpace.Merge(m, src)
}
func (m *AccountSpace) XXX_Size() int {
	return m.Size()
}
func (m *AccountSpace) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSpace.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSpace proto.InternalMessageInfo

func (m *AccountSpace) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AccountSpace) GetSpaceTotal() string {
	if m != nil {
		return m.SpaceTotal
	}
	return ""
}

type AccountInvite struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	SupAccount           string   `protobuf:"bytes,2,opt,name=SupAccount,proto3" json:"SupAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountInvite) Reset()         { *m = AccountInvite{} }
func (m *AccountInvite) String() string { return proto.CompactTextString(m) }
func (*AccountInvite) ProtoMessage()    {}
func (*AccountInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{2}
}
func (m *AccountInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountInvite.Merge(m, src)
}
func (m *AccountInvite) XXX_Size() int {
	return m.Size()
}
func (m *AccountInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountInvite.DiscardUnknown(m)
}

var xxx_messageInfo_AccountInvite proto.InternalMessageInfo

func (m *AccountInvite) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AccountInvite) GetSupAccount() string {
	if m != nil {
		return m.SupAccount
	}
	return ""
}

type InviteRecords struct {
	Account              string                `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountInviteRecord  []AccountInviteRecord `protobuf:"bytes,2,rep,name=accountInviteRecord,proto3" json:"accountInviteRecord"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *InviteRecords) Reset()         { *m = InviteRecords{} }
func (m *InviteRecords) String() string { return proto.CompactTextString(m) }
func (*InviteRecords) ProtoMessage()    {}
func (*InviteRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{3}
}
func (m *InviteRecords) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InviteRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InviteRecords.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InviteRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteRecords.Merge(m, src)
}
func (m *InviteRecords) XXX_Size() int {
	return m.Size()
}
func (m *InviteRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteRecords.DiscardUnknown(m)
}

var xxx_messageInfo_InviteRecords proto.InternalMessageInfo

func (m *InviteRecords) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *InviteRecords) GetAccountInviteRecord() []AccountInviteRecord {
	if m != nil {
		return m.AccountInviteRecord
	}
	return nil
}

type AccountInviteRecord struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	InviteTime           string   `protobuf:"bytes,2,opt,name=InviteTime,proto3" json:"InviteTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountInviteRecord) Reset()         { *m = AccountInviteRecord{} }
func (m *AccountInviteRecord) String() string { return proto.CompactTextString(m) }
func (*AccountInviteRecord) ProtoMessage()    {}
func (*AccountInviteRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{4}
}
func (m *AccountInviteRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountInviteRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountInviteRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountInviteRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountInviteRecord.Merge(m, src)
}
func (m *AccountInviteRecord) XXX_Size() int {
	return m.Size()
}
func (m *AccountInviteRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountInviteRecord.DiscardUnknown(m)
}

var xxx_messageInfo_AccountInviteRecord proto.InternalMessageInfo

func (m *AccountInviteRecord) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AccountInviteRecord) GetInviteTime() string {
	if m != nil {
		return m.InviteTime
	}
	return ""
}

type DeflationInfor struct {
	MinerTotalAmount     string   `protobuf:"bytes,1,opt,name=MinerTotalAmount,proto3" json:"MinerTotalAmount,omitempty"`
	HasMinerAmount       string   `protobuf:"bytes,2,opt,name=HasMinerAmount,proto3" json:"HasMinerAmount,omitempty"`
	RemainMinerAmount    string   `protobuf:"bytes,3,opt,name=RemainMinerAmount,proto3" json:"RemainMinerAmount,omitempty"`
	DayMinerAmount       string   `protobuf:"bytes,4,opt,name=DayMinerAmount,proto3" json:"DayMinerAmount,omitempty"`
	DayMinerRemain       string   `protobuf:"bytes,5,opt,name=DayMinerRemain,proto3" json:"DayMinerRemain,omitempty"`
	SpaceMinerAmount     string   `protobuf:"bytes,6,opt,name=SpaceMinerAmount,proto3" json:"SpaceMinerAmount,omitempty"`
	SpaceMinerBonus      string   `protobuf:"bytes,7,opt,name=SpaceMinerBonus,proto3" json:"SpaceMinerBonus,omitempty"`
	DeflationSpaceTotal  string   `protobuf:"bytes,8,opt,name=DeflationSpaceTotal,proto3" json:"DeflationSpaceTotal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeflationInfor) Reset()         { *m = DeflationInfor{} }
func (m *DeflationInfor) String() string { return proto.CompactTextString(m) }
func (*DeflationInfor) ProtoMessage()    {}
func (*DeflationInfor) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{5}
}
func (m *DeflationInfor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeflationInfor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeflationInfor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeflationInfor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeflationInfor.Merge(m, src)
}
func (m *DeflationInfor) XXX_Size() int {
	return m.Size()
}
func (m *DeflationInfor) XXX_DiscardUnknown() {
	xxx_messageInfo_DeflationInfor.DiscardUnknown(m)
}

var xxx_messageInfo_DeflationInfor proto.InternalMessageInfo

func (m *DeflationInfor) GetMinerTotalAmount() string {
	if m != nil {
		return m.MinerTotalAmount
	}
	return ""
}

func (m *DeflationInfor) GetHasMinerAmount() string {
	if m != nil {
		return m.HasMinerAmount
	}
	return ""
}

func (m *DeflationInfor) GetRemainMinerAmount() string {
	if m != nil {
		return m.RemainMinerAmount
	}
	return ""
}

func (m *DeflationInfor) GetDayMinerAmount() string {
	if m != nil {
		return m.DayMinerAmount
	}
	return ""
}

func (m *DeflationInfor) GetDayMinerRemain() string {
	if m != nil {
		return m.DayMinerRemain
	}
	return ""
}

func (m *DeflationInfor) GetSpaceMinerAmount() string {
	if m != nil {
		return m.SpaceMinerAmount
	}
	return ""
}

func (m *DeflationInfor) GetSpaceMinerBonus() string {
	if m != nil {
		return m.SpaceMinerBonus
	}
	return ""
}

func (m *DeflationInfor) GetDeflationSpaceTotal() string {
	if m != nil {
		return m.DeflationSpaceTotal
	}
	return ""
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "copyright.v1beta1.GenesisState")
	proto.RegisterType((*AccountSpace)(nil), "copyright.v1beta1.AccountSpace")
	proto.RegisterType((*AccountInvite)(nil), "copyright.v1beta1.AccountInvite")
	proto.RegisterType((*InviteRecords)(nil), "copyright.v1beta1.InviteRecords")
	proto.RegisterType((*AccountInviteRecord)(nil), "copyright.v1beta1.AccountInviteRecord")
	proto.RegisterType((*DeflationInfor)(nil), "copyright.v1beta1.DeflationInfor")
}

func init() { proto.RegisterFile("genesis.proto", fileDescriptor_14205810582f3203) }

var fileDescriptor_14205810582f3203 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x71, 0x5b, 0x36, 0x38, 0x6b, 0x0b, 0x75, 0xb9, 0xb0, 0xb8, 0x68, 0x4b, 0x2e, 0xa6,
	0x0a, 0xa1, 0x96, 0x8d, 0x27, 0x58, 0x35, 0x89, 0x45, 0x02, 0x4d, 0xea, 0x76, 0xc5, 0x05, 0x92,
	0x97, 0x78, 0xc1, 0xd2, 0x6a, 0x47, 0xb1, 0x3b, 0xd1, 0x47, 0xe0, 0xc5, 0xd0, 0x2e, 0x79, 0x02,
	0x84, 0x7a, 0xc9, 0x53, 0xa0, 0xd8, 0x49, 0x66, 0xa7, 0x19, 0xbb, 0xab, 0xff, 0xf3, 0xfd, 0x7f,
	0xcf, 0x39, 0xb6, 0x02, 0xbd, 0x84, 0x09, 0xa6, 0xb8, 0x9a, 0xa5, 0x99, 0xd4, 0x12, 0x0f, 0x22,
	0x99, 0x6e, 0x32, 0x9e, 0x7c, 0xd3, 0xb3, 0xdb, 0xa3, 0x2b, 0xa6, 0xe9, 0xd1, 0xeb, 0x57, 0x89,
	0x4c, 0xa4, 0xa9, 0xce, 0xf3, 0x5f, 0x16, 0x0c, 0x7e, 0xb6, 0xa0, 0xfb, 0xd1, 0x5a, 0x2f, 0x34,
	0xd5, 0x0c, 0x87, 0xd0, 0xa5, 0x51, 0x24, 0xd7, 0x42, 0x5f, 0xa4, 0x34, 0x62, 0x04, 0x4d, 0xda,
	0xd3, 0x83, 0xe3, 0xf1, 0x6c, 0x27, 0x70, 0x76, 0xe2, 0x60, 0x8b, 0xce, 0xdd, 0xef, 0xf1, 0x93,
	0xa5, 0x67, 0xc5, 0x9f, 0xa0, 0x57, 0x9c, 0x43, 0x71, 0xcb, 0x35, 0x23, 0x2d, 0x93, 0x35, 0x79,
	0x38, 0xcb, 0x72, 0x45, 0x98, 0x6f, 0xc6, 0xe7, 0xd0, 0x8f, 0xd9, 0xf5, 0x0d, 0xd5, 0x5c, 0x8a,
	0x50, 0x5c, 0xcb, 0x8c, 0xb4, 0x27, 0x68, 0x7a, 0x70, 0xfc, 0xa6, 0x21, 0xee, 0xd4, 0x03, 0x8b,
	0xbc, 0x9a, 0x3d, 0x6f, 0x8f, 0x9b, 0xe8, 0x25, 0x8b, 0x64, 0x16, 0x2b, 0xd2, 0x79, 0xb0, 0xbd,
	0xd0, 0xe5, 0xca, 0xf6, 0x3c, 0x73, 0x70, 0x06, 0x5d, 0x77, 0x21, 0x98, 0xc0, 0x7e, 0x71, 0x26,
	0x68, 0x82, 0xa6, 0xcf, 0x97, 0xe5, 0x11, 0x8f, 0x00, 0x0c, 0x72, 0x29, 0x35, 0xbd, 0x21, 0x2d,
	0x53, 0x74, 0x94, 0x20, 0x84, 0x9e, 0xb7, 0x8e, 0x47, 0xa2, 0xd6, 0x69, 0x59, 0x2c, 0xa3, 0x2a,
	0x25, 0xf8, 0x81, 0xa0, 0xe7, 0xf5, 0xfe, 0x9f, 0xac, 0xaf, 0x30, 0xf4, 0x16, 0x6e, 0x1d, 0xc5,
	0x9d, 0x1d, 0x3e, 0x76, 0x67, 0x96, 0x2e, 0x56, 0xd3, 0x14, 0x14, 0x9c, 0xc3, 0xb0, 0xc1, 0x61,
	0x1a, 0x8a, 0xe3, 0x8c, 0x29, 0x55, 0x35, 0x64, 0x8f, 0xf9, 0x70, 0x96, 0xbc, 0xe4, 0x2b, 0x56,
	0x0e, 0x77, 0xaf, 0x04, 0x7f, 0x5b, 0xd0, 0xf7, 0x2f, 0x1a, 0xbf, 0x85, 0x97, 0x9f, 0xb9, 0x60,
	0x99, 0x59, 0xe4, 0xc9, 0xca, 0x19, 0x73, 0x47, 0xc7, 0x87, 0xd0, 0x3f, 0xa3, 0xca, 0xc8, 0x05,
	0x69, 0xff, 0xa2, 0xa6, 0xe2, 0x77, 0x30, 0x58, 0xb2, 0x15, 0xe5, 0xc2, 0x45, 0xdb, 0x06, 0xdd,
	0x2d, 0xe4, 0xa9, 0xa7, 0x74, 0xe3, 0xa2, 0x1d, 0x9b, 0xea, 0xab, 0x2e, 0x67, 0x43, 0xc8, 0x53,
	0x9f, 0xb3, 0x6a, 0x3e, 0x91, 0x79, 0x1a, 0x6e, 0xe2, 0x9e, 0x9d, 0xa8, 0xae, 0xe3, 0x29, 0xbc,
	0xb8, 0xd7, 0x16, 0x52, 0xac, 0x15, 0xd9, 0x37, 0x68, 0x5d, 0xc6, 0xef, 0x61, 0x58, 0x6d, 0xce,
	0x79, 0x8b, 0xcf, 0x0c, 0xdd, 0x54, 0x5a, 0x8c, 0xef, 0xb6, 0x23, 0xf4, 0x6b, 0x3b, 0x42, 0x7f,
	0xb6, 0x23, 0xf4, 0x65, 0xf0, 0x7d, 0x5e, 0xbd, 0x87, 0xb9, 0xde, 0xa4, 0x4c, 0x5d, 0xed, 0x99,
	0xef, 0xc9, 0x87, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x88, 0xf8, 0x49, 0x62, 0x89, 0x04, 0x00,
	0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InviteRecords) > 0 {
		for iNdEx := len(m.InviteRecords) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InviteRecords[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	{
		size, err := m.DeflationInfor.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.AccountInvite) > 0 {
		for iNdEx := len(m.AccountInvite) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccountInvite[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.AccountSpace) > 0 {
		for iNdEx := len(m.AccountSpace) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccountSpace[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AccountSpace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSpace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountSpace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SpaceTotal) > 0 {
		i -= len(m.SpaceTotal)
		copy(dAtA[i:], m.SpaceTotal)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.SpaceTotal)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SupAccount) > 0 {
		i -= len(m.SupAccount)
		copy(dAtA[i:], m.SupAccount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.SupAccount)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *InviteRecords) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InviteRecords) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InviteRecords) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AccountInviteRecord) > 0 {
		for iNdEx := len(m.AccountInviteRecord) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccountInviteRecord[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountInviteRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountInviteRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountInviteRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InviteTime) > 0 {
		i -= len(m.InviteTime)
		copy(dAtA[i:], m.InviteTime)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.InviteTime)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeflationInfor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeflationInfor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeflationInfor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeflationSpaceTotal) > 0 {
		i -= len(m.DeflationSpaceTotal)
		copy(dAtA[i:], m.DeflationSpaceTotal)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.DeflationSpaceTotal)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SpaceMinerBonus) > 0 {
		i -= len(m.SpaceMinerBonus)
		copy(dAtA[i:], m.SpaceMinerBonus)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.SpaceMinerBonus)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SpaceMinerAmount) > 0 {
		i -= len(m.SpaceMinerAmount)
		copy(dAtA[i:], m.SpaceMinerAmount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.SpaceMinerAmount)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DayMinerRemain) > 0 {
		i -= len(m.DayMinerRemain)
		copy(dAtA[i:], m.DayMinerRemain)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.DayMinerRemain)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DayMinerAmount) > 0 {
		i -= len(m.DayMinerAmount)
		copy(dAtA[i:], m.DayMinerAmount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.DayMinerAmount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RemainMinerAmount) > 0 {
		i -= len(m.RemainMinerAmount)
		copy(dAtA[i:], m.RemainMinerAmount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.RemainMinerAmount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.HasMinerAmount) > 0 {
		i -= len(m.HasMinerAmount)
		copy(dAtA[i:], m.HasMinerAmount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.HasMinerAmount)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MinerTotalAmount) > 0 {
		i -= len(m.MinerTotalAmount)
		copy(dAtA[i:], m.MinerTotalAmount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.MinerTotalAmount)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AccountSpace) > 0 {
		for _, e := range m.AccountSpace {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.AccountInvite) > 0 {
		for _, e := range m.AccountInvite {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	l = m.DeflationInfor.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if len(m.InviteRecords) > 0 {
		for _, e := range m.InviteRecords {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountSpace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.SpaceTotal)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.SupAccount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InviteRecords) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if len(m.AccountInviteRecord) > 0 {
		for _, e := range m.AccountInviteRecord {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountInviteRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.InviteTime)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeflationInfor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MinerTotalAmount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.HasMinerAmount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.RemainMinerAmount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.DayMinerAmount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.DayMinerRemain)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.SpaceMinerAmount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.SpaceMinerBonus)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.DeflationSpaceTotal)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountSpace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountSpace = append(m.AccountSpace, AccountSpace{})
			if err := m.AccountSpace[len(m.AccountSpace)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountInvite", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountInvite = append(m.AccountInvite, AccountInvite{})
			if err := m.AccountInvite[len(m.AccountInvite)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeflationInfor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DeflationInfor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteRecords", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteRecords = append(m.InviteRecords, InviteRecords{})
			if err := m.InviteRecords[len(m.InviteRecords)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountSpace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSpace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSpace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceTotal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceTotal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupAccount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupAccount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InviteRecords) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InviteRecords: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InviteRecords: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountInviteRecord", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountInviteRecord = append(m.AccountInviteRecord, AccountInviteRecord{})
			if err := m.AccountInviteRecord[len(m.AccountInviteRecord)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountInviteRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountInviteRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountInviteRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeflationInfor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeflationInfor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeflationInfor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinerTotalAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinerTotalAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMinerAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasMinerAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemainMinerAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemainMinerAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DayMinerAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DayMinerAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DayMinerRemain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DayMinerRemain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceMinerAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceMinerAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceMinerBonus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceMinerBonus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeflationSpaceTotal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeflationSpaceTotal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
