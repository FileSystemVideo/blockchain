// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	grpc1 "github.com/gogo/protobuf/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCrossChainOut struct {
	SendAddress          string   `protobuf:"bytes,1,opt,name=send_address,json=sendAddress,proto3" json:"send_address,omitempty" yaml:"send_address"`
	ToAddress            string   `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty" yaml:"to_address"`
	Coins                string   `protobuf:"bytes,3,opt,name=coins,proto3" json:"coins,omitempty" yaml:"coins"`
	ChainType            string   `protobuf:"bytes,4,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty" yaml:"chain_type"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty" yaml:"remark"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCrossChainOut) Reset()         { *m = MsgCrossChainOut{} }
func (m *MsgCrossChainOut) String() string { return proto.CompactTextString(m) }
func (*MsgCrossChainOut) ProtoMessage()    {}
func (*MsgCrossChainOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{0}
}
func (m *MsgCrossChainOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCrossChainOut.Unmarshal(m, b)
}
func (m *MsgCrossChainOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCrossChainOut.Marshal(b, m, deterministic)
}
func (m *MsgCrossChainOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCrossChainOut.Merge(m, src)
}
func (m *MsgCrossChainOut) XXX_Size() int {
	return xxx_messageInfo_MsgCrossChainOut.Size(m)
}
func (m *MsgCrossChainOut) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCrossChainOut.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCrossChainOut proto.InternalMessageInfo

type MsgCrossChainIn struct {
	SendAddress          string   `protobuf:"bytes,2,opt,name=send_address,json=sendAddress,proto3" json:"send_address,omitempty" yaml:"send_address"`
	Coins                string   `protobuf:"bytes,3,opt,name=coins,proto3" json:"coins,omitempty" yaml:"coins"`
	ChainType            string   `protobuf:"bytes,4,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty" yaml:"chain_type"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty" yaml:"remark"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCrossChainIn) Reset()         { *m = MsgCrossChainIn{} }
func (m *MsgCrossChainIn) String() string { return proto.CompactTextString(m) }
func (*MsgCrossChainIn) ProtoMessage()    {}
func (*MsgCrossChainIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{1}
}
func (m *MsgCrossChainIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCrossChainIn.Unmarshal(m, b)
}
func (m *MsgCrossChainIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCrossChainIn.Marshal(b, m, deterministic)
}
func (m *MsgCrossChainIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCrossChainIn.Merge(m, src)
}
func (m *MsgCrossChainIn) XXX_Size() int {
	return xxx_messageInfo_MsgCrossChainIn.Size(m)
}
func (m *MsgCrossChainIn) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCrossChainIn.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCrossChainIn proto.InternalMessageInfo

type MsgCopyrightBonusRear struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	OfferAccountShare    string   `protobuf:"bytes,3,opt,name=offer_account_share,json=offerAccountShare,proto3" json:"offer_account_share,omitempty" yaml:"offer_account_share"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCopyrightBonusRear) Reset()         { *m = MsgCopyrightBonusRear{} }
func (m *MsgCopyrightBonusRear) String() string { return proto.CompactTextString(m) }
func (*MsgCopyrightBonusRear) ProtoMessage()    {}
func (*MsgCopyrightBonusRear) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{2}
}
func (m *MsgCopyrightBonusRear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCopyrightBonusRear.Unmarshal(m, b)
}
func (m *MsgCopyrightBonusRear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCopyrightBonusRear.Marshal(b, m, deterministic)
}
func (m *MsgCopyrightBonusRear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCopyrightBonusRear.Merge(m, src)
}
func (m *MsgCopyrightBonusRear) XXX_Size() int {
	return xxx_messageInfo_MsgCopyrightBonusRear.Size(m)
}
func (m *MsgCopyrightBonusRear) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCopyrightBonusRear.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCopyrightBonusRear proto.InternalMessageInfo

type MsgDistributeCommunityReward struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" yaml:"address"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty" yaml:"amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDistributeCommunityReward) Reset()         { *m = MsgDistributeCommunityReward{} }
func (m *MsgDistributeCommunityReward) String() string { return proto.CompactTextString(m) }
func (*MsgDistributeCommunityReward) ProtoMessage()    {}
func (*MsgDistributeCommunityReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{3}
}
func (m *MsgDistributeCommunityReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDistributeCommunityReward.Unmarshal(m, b)
}
func (m *MsgDistributeCommunityReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDistributeCommunityReward.Marshal(b, m, deterministic)
}
func (m *MsgDistributeCommunityReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDistributeCommunityReward.Merge(m, src)
}
func (m *MsgDistributeCommunityReward) XXX_Size() int {
	return xxx_messageInfo_MsgDistributeCommunityReward.Size(m)
}
func (m *MsgDistributeCommunityReward) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDistributeCommunityReward.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDistributeCommunityReward proto.InternalMessageInfo

type MsgCreateCopyright struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty" yaml:"price"`
	Creator string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	ResourceType string `protobuf:"bytes,4,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty" yaml:"resource_type"`
	PreHash string `protobuf:"bytes,5,opt,name=pre_hash,json=preHash,proto3" json:"pre_hash,omitempty" yaml:"pre_hash"`
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty" yaml:"name"`
	Files []byte `protobuf:"bytes,7,opt,name=files,proto3" json:"files,omitempty" yaml:"files"`
	Size_ int64 `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty" yaml:"size"`
	CreateTime int32 `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" yaml:"create_time"`
	Password string `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty" yaml:"password"`
	ChargeRate string `protobuf:"bytes,11,opt,name=charge_rate,json=chargeRate,proto3" json:"charge_rate,omitempty" yaml:"charge_rate"`
	Ip string `protobuf:"bytes,12,opt,name=ip,proto3" json:"ip,omitempty" yaml:"ip"`
	OriginDataHash string `protobuf:"bytes,13,opt,name=origin_data_hash,json=originDataHash,proto3" json:"origin_data_hash,omitempty" yaml:"origin_data_hash"`
	ClassifyUid int64 `protobuf:"varint,14,opt,name=classify_uid,json=classifyUid,proto3" json:"classify_uid,omitempty" yaml:"classify_uid"`
	Ext string `protobuf:"bytes,15,opt,name=ext,proto3" json:"ext,omitempty" yaml:"ext"`
	LinkMap []byte `protobuf:"bytes,16,opt,name=linkMap,proto3" json:"linkMap,omitempty" yaml:"link_map"`
	VideoHash string `protobuf:"bytes,17,opt,name=video_hash,json=videoHash,proto3" json:"video_hash,omitempty" yaml:"video_hash"`
	PicLinkMap           []byte   `protobuf:"bytes,18,opt,name=pic_link_map,json=picLinkMap,proto3" json:"pic_link_map,omitempty" yaml:"pic_link_map"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCreateCopyright) Reset()         { *m = MsgCreateCopyright{} }
func (m *MsgCreateCopyright) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCopyright) ProtoMessage()    {}
func (*MsgCreateCopyright) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{4}
}
func (m *MsgCreateCopyright) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCreateCopyright.Unmarshal(m, b)
}
func (m *MsgCreateCopyright) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCreateCopyright.Marshal(b, m, deterministic)
}
func (m *MsgCreateCopyright) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCopyright.Merge(m, src)
}
func (m *MsgCreateCopyright) XXX_Size() int {
	return xxx_messageInfo_MsgCreateCopyright.Size(m)
}
func (m *MsgCreateCopyright) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCopyright.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCopyright proto.InternalMessageInfo

type MsgRegisterCopyrightParty struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" yaml:"id"`
	Intro string `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty" yaml:"intro"`
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty" yaml:"author"`
	Creator string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	Ext                  string   `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty" yaml:"ext"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgRegisterCopyrightParty) Reset()         { *m = MsgRegisterCopyrightParty{} }
func (m *MsgRegisterCopyrightParty) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterCopyrightParty) ProtoMessage()    {}
func (*MsgRegisterCopyrightParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{5}
}
func (m *MsgRegisterCopyrightParty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRegisterCopyrightParty.Unmarshal(m, b)
}
func (m *MsgRegisterCopyrightParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRegisterCopyrightParty.Marshal(b, m, deterministic)
}
func (m *MsgRegisterCopyrightParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterCopyrightParty.Merge(m, src)
}
func (m *MsgRegisterCopyrightParty) XXX_Size() int {
	return xxx_messageInfo_MsgRegisterCopyrightParty.Size(m)
}
func (m *MsgRegisterCopyrightParty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterCopyrightParty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterCopyrightParty proto.InternalMessageInfo

type MsgSpaceMiner struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	DeflationAmount string `protobuf:"bytes,2,opt,name=deflation_amount,json=deflationAmount,proto3" json:"deflation_amount,omitempty" yaml:"deflation_amount"`
	AwardAccount         string   `protobuf:"bytes,3,opt,name=award_account,json=awardAccount,proto3" json:"award_account,omitempty" yaml:"award_account"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgSpaceMiner) Reset()         { *m = MsgSpaceMiner{} }
func (m *MsgSpaceMiner) String() string { return proto.CompactTextString(m) }
func (*MsgSpaceMiner) ProtoMessage()    {}
func (*MsgSpaceMiner) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{6}
}
func (m *MsgSpaceMiner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSpaceMiner.Unmarshal(m, b)
}
func (m *MsgSpaceMiner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSpaceMiner.Marshal(b, m, deterministic)
}
func (m *MsgSpaceMiner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSpaceMiner.Merge(m, src)
}
func (m *MsgSpaceMiner) XXX_Size() int {
	return xxx_messageInfo_MsgSpaceMiner.Size(m)
}
func (m *MsgSpaceMiner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSpaceMiner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSpaceMiner proto.InternalMessageInfo

type MsgDeflationVote struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	Option               string   `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty" yaml:"option"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDeflationVote) Reset()         { *m = MsgDeflationVote{} }
func (m *MsgDeflationVote) String() string { return proto.CompactTextString(m) }
func (*MsgDeflationVote) ProtoMessage()    {}
func (*MsgDeflationVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{7}
}
func (m *MsgDeflationVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDeflationVote.Unmarshal(m, b)
}
func (m *MsgDeflationVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDeflationVote.Marshal(b, m, deterministic)
}
func (m *MsgDeflationVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeflationVote.Merge(m, src)
}
func (m *MsgDeflationVote) XXX_Size() int {
	return xxx_messageInfo_MsgDeflationVote.Size(m)
}
func (m *MsgDeflationVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeflationVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeflationVote proto.InternalMessageInfo

type MsgNftTransfer struct {
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" yaml:"to"`
	TokenId              string   `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty" yaml:"token_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgNftTransfer) Reset()         { *m = MsgNftTransfer{} }
func (m *MsgNftTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgNftTransfer) ProtoMessage()    {}
func (*MsgNftTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{8}
}
func (m *MsgNftTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgNftTransfer.Unmarshal(m, b)
}
func (m *MsgNftTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgNftTransfer.Marshal(b, m, deterministic)
}
func (m *MsgNftTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNftTransfer.Merge(m, src)
}
func (m *MsgNftTransfer) XXX_Size() int {
	return xxx_messageInfo_MsgNftTransfer.Size(m)
}
func (m *MsgNftTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNftTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNftTransfer proto.InternalMessageInfo

type MsgInviteCode struct {
	Address string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty" yaml:"Address"`
	InviteCode string `protobuf:"bytes,2,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty" yaml:"invite_code"`
	InviteTime           int64    `protobuf:"varint,3,opt,name=invite_time,json=inviteTime,proto3" json:"invite_time,omitempty" yaml:"invite_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgInviteCode) Reset()         { *m = MsgInviteCode{} }
func (m *MsgInviteCode) String() string { return proto.CompactTextString(m) }
func (*MsgInviteCode) ProtoMessage()    {}
func (*MsgInviteCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{9}
}
func (m *MsgInviteCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgInviteCode.Unmarshal(m, b)
}
func (m *MsgInviteCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgInviteCode.Marshal(b, m, deterministic)
}
func (m *MsgInviteCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteCode.Merge(m, src)
}
func (m *MsgInviteCode) XXX_Size() int {
	return xxx_messageInfo_MsgInviteCode.Size(m)
}
func (m *MsgInviteCode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteCode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteCode proto.InternalMessageInfo

type MsgMortgage struct {
	MortageAccount string `protobuf:"bytes,1,opt,name=mortage_account,json=mortageAccount,proto3" json:"mortage_account,omitempty" yaml:"mortage_account"`
	DataHash string `protobuf:"bytes,2,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty" yaml:"data_hash"`
	CopyrightPrice string `protobuf:"bytes,3,opt,name=copyright_price,json=copyrightPrice,proto3" json:"copyright_price,omitempty" yaml:"copyright_price"`
	Creator string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	CreateTime int64 `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" yaml:"create_time"`
	MortgageAmount string `protobuf:"bytes,6,opt,name=mortgage_amount,json=mortgageAmount,proto3" json:"mortgage_amount,omitempty" yaml:"mortgage_amount"`
	OfferAccountShare string `protobuf:"bytes,7,opt,name=offer_account_share,json=offerAccountShare,proto3" json:"offer_account_share,omitempty" yaml:"offer_account_share"`
	DataHashAccount string `protobuf:"bytes,8,opt,name=data_hash_account,json=dataHashAccount,proto3" json:"data_hash_account,omitempty" yaml:"data_hash_account"`
	BonusType            string   `protobuf:"bytes,9,opt,name=bonus_type,json=bonusType,proto3" json:"bonus_type,omitempty" yaml:"bonus_type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgMortgage) Reset()         { *m = MsgMortgage{} }
func (m *MsgMortgage) String() string { return proto.CompactTextString(m) }
func (*MsgMortgage) ProtoMessage()    {}
func (*MsgMortgage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{10}
}
func (m *MsgMortgage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgMortgage.Unmarshal(m, b)
}
func (m *MsgMortgage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgMortgage.Marshal(b, m, deterministic)
}
func (m *MsgMortgage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMortgage.Merge(m, src)
}
func (m *MsgMortgage) XXX_Size() int {
	return xxx_messageInfo_MsgMortgage.Size(m)
}
func (m *MsgMortgage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMortgage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMortgage proto.InternalMessageInfo

type MsgEditorCopyright struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty" yaml:"price"`
	Creator string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" yaml:"name"`
	ChargeRate string `protobuf:"bytes,5,opt,name=charge_rate,json=chargeRate,proto3" json:"charge_rate,omitempty" yaml:"charge_rate"`
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty" yaml:"ip"`
	Fee                  string   `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty" yaml:"fee"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgEditorCopyright) Reset()         { *m = MsgEditorCopyright{} }
func (m *MsgEditorCopyright) String() string { return proto.CompactTextString(m) }
func (*MsgEditorCopyright) ProtoMessage()    {}
func (*MsgEditorCopyright) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{11}
}
func (m *MsgEditorCopyright) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgEditorCopyright.Unmarshal(m, b)
}
func (m *MsgEditorCopyright) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgEditorCopyright.Marshal(b, m, deterministic)
}
func (m *MsgEditorCopyright) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditorCopyright.Merge(m, src)
}
func (m *MsgEditorCopyright) XXX_Size() int {
	return xxx_messageInfo_MsgEditorCopyright.Size(m)
}
func (m *MsgEditorCopyright) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditorCopyright.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditorCopyright proto.InternalMessageInfo

type MsgDeleteCopyright struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDeleteCopyright) Reset()         { *m = MsgDeleteCopyright{} }
func (m *MsgDeleteCopyright) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCopyright) ProtoMessage()    {}
func (*MsgDeleteCopyright) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{12}
}
func (m *MsgDeleteCopyright) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDeleteCopyright.Unmarshal(m, b)
}
func (m *MsgDeleteCopyright) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDeleteCopyright.Marshal(b, m, deterministic)
}
func (m *MsgDeleteCopyright) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCopyright.Merge(m, src)
}
func (m *MsgDeleteCopyright) XXX_Size() int {
	return xxx_messageInfo_MsgDeleteCopyright.Size(m)
}
func (m *MsgDeleteCopyright) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCopyright.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCopyright proto.InternalMessageInfo

type MsgCopyrightBonus struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
	DataHashAccount string `protobuf:"bytes,3,opt,name=data_hash_account,json=dataHashAccount,proto3" json:"data_hash_account,omitempty" yaml:"data_hash_account"`
	OfferAccountShare string `protobuf:"bytes,4,opt,name=offer_account_share,json=offerAccountShare,proto3" json:"offer_account_share,omitempty" yaml:"offer_account_share"`
	BonusType            string   `protobuf:"bytes,5,opt,name=bonus_type,json=bonusType,proto3" json:"bonus_type,omitempty" yaml:"bonus_type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCopyrightBonus) Reset()         { *m = MsgCopyrightBonus{} }
func (m *MsgCopyrightBonus) String() string { return proto.CompactTextString(m) }
func (*MsgCopyrightBonus) ProtoMessage()    {}
func (*MsgCopyrightBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{13}
}
func (m *MsgCopyrightBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCopyrightBonus.Unmarshal(m, b)
}
func (m *MsgCopyrightBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCopyrightBonus.Marshal(b, m, deterministic)
}
func (m *MsgCopyrightBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCopyrightBonus.Merge(m, src)
}
func (m *MsgCopyrightBonus) XXX_Size() int {
	return xxx_messageInfo_MsgCopyrightBonus.Size(m)
}
func (m *MsgCopyrightBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCopyrightBonus.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCopyrightBonus proto.InternalMessageInfo

type MsgCopyrightComplain struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty" yaml:"author"`
	Productor string `protobuf:"bytes,3,opt,name=productor,proto3" json:"productor,omitempty" yaml:"productor"`
	LegalNumber          string   `protobuf:"bytes,4,opt,name=legal_number,json=legalNumber,proto3" json:"legal_number,omitempty" yaml:"legal_number"`
	LegalTime            string   `protobuf:"bytes,5,opt,name=legal_time,json=legalTime,proto3" json:"legal_time,omitempty" yaml:"legal_time"`
	ComplainInfor        string   `protobuf:"bytes,6,opt,name=complain_infor,json=complainInfor,proto3" json:"complain_infor,omitempty" yaml:"complain_infor"`
	ComplainAccount      string   `protobuf:"bytes,7,opt,name=complain_account,json=complainAccount,proto3" json:"complain_account,omitempty" yaml:"complain_account"`
	AccuseAccount        string   `protobuf:"bytes,8,opt,name=accuse_account,json=accuseAccount,proto3" json:"accuse_account,omitempty" yaml:"accuse_account"`
	ComplainId           string   `protobuf:"bytes,9,opt,name=complain_id,json=complainId,proto3" json:"complain_id,omitempty" yaml:"complain_id"`
	ComplainTime         int64    `protobuf:"varint,10,opt,name=complain_time,json=complainTime,proto3" json:"complain_time,omitempty" yaml:"complain_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCopyrightComplain) Reset()         { *m = MsgCopyrightComplain{} }
func (m *MsgCopyrightComplain) String() string { return proto.CompactTextString(m) }
func (*MsgCopyrightComplain) ProtoMessage()    {}
func (*MsgCopyrightComplain) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{14}
}
func (m *MsgCopyrightComplain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCopyrightComplain.Unmarshal(m, b)
}
func (m *MsgCopyrightComplain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCopyrightComplain.Marshal(b, m, deterministic)
}
func (m *MsgCopyrightComplain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCopyrightComplain.Merge(m, src)
}
func (m *MsgCopyrightComplain) XXX_Size() int {
	return xxx_messageInfo_MsgCopyrightComplain.Size(m)
}
func (m *MsgCopyrightComplain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCopyrightComplain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCopyrightComplain proto.InternalMessageInfo

type MsgComplainResponse struct {
	Datahash string `protobuf:"bytes,1,opt,name=datahash,proto3" json:"datahash,omitempty" yaml:"datahash"`
	RemoteIp             string   `protobuf:"bytes,2,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty" yaml:"remote_ip"`
	AccuseInfor          string   `protobuf:"bytes,3,opt,name=accuse_infor,json=accuseInfor,proto3" json:"accuse_infor,omitempty" yaml:"accuse_infor"`
	AccuseAccount        string   `protobuf:"bytes,4,opt,name=accuse_account,json=accuseAccount,proto3" json:"accuse_account,omitempty" yaml:"accuse_account"`
	ComplainId           string   `protobuf:"bytes,5,opt,name=complain_id,json=complainId,proto3" json:"complain_id,omitempty" yaml:"complain_id"`
	ResponseTime         int64    `protobuf:"varint,6,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty" yaml:"response_time"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty" yaml:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgComplainResponse) Reset()         { *m = MsgComplainResponse{} }
func (m *MsgComplainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgComplainResponse) ProtoMessage()    {}
func (*MsgComplainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{15}
}
func (m *MsgComplainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgComplainResponse.Unmarshal(m, b)
}
func (m *MsgComplainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgComplainResponse.Marshal(b, m, deterministic)
}
func (m *MsgComplainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgComplainResponse.Merge(m, src)
}
func (m *MsgComplainResponse) XXX_Size() int {
	return xxx_messageInfo_MsgComplainResponse.Size(m)
}
func (m *MsgComplainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgComplainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgComplainResponse proto.InternalMessageInfo

type MsgComplainVote struct {
	VoteAccount          string   `protobuf:"bytes,1,opt,name=vote_account,json=voteAccount,proto3" json:"vote_account,omitempty" yaml:"vote_account"`
	ComplainId           string   `protobuf:"bytes,2,opt,name=complain_id,json=complainId,proto3" json:"complain_id,omitempty" yaml:"complain_id"`
	VoteStatus           string   `protobuf:"bytes,3,opt,name=vote_status,json=voteStatus,proto3" json:"vote_status,omitempty" yaml:"vote_status"`
	VotePower            string   `protobuf:"bytes,4,opt,name=vote_power,json=votePower,proto3" json:"vote_power,omitempty" yaml:"vote_power"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgComplainVote) Reset()         { *m = MsgComplainVote{} }
func (m *MsgComplainVote) String() string { return proto.CompactTextString(m) }
func (*MsgComplainVote) ProtoMessage()    {}
func (*MsgComplainVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{16}
}
func (m *MsgComplainVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgComplainVote.Unmarshal(m, b)
}
func (m *MsgComplainVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgComplainVote.Marshal(b, m, deterministic)
}
func (m *MsgComplainVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgComplainVote.Merge(m, src)
}
func (m *MsgComplainVote) XXX_Size() int {
	return xxx_messageInfo_MsgComplainVote.Size(m)
}
func (m *MsgComplainVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgComplainVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgComplainVote proto.InternalMessageInfo

type MsgAuthorizeAccount struct {
	ConsAddr             string   `protobuf:"bytes,1,opt,name=cons_addr,json=consAddr,proto3" json:"cons_addr,omitempty" yaml:"cons_addr"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty" yaml:"account"`
	Sign                 string   `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty" yaml:"sign"`
	Message              string   `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty" yaml:"message"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgAuthorizeAccount) Reset()         { *m = MsgAuthorizeAccount{} }
func (m *MsgAuthorizeAccount) String() string { return proto.CompactTextString(m) }
func (*MsgAuthorizeAccount) ProtoMessage()    {}
func (*MsgAuthorizeAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{17}
}
func (m *MsgAuthorizeAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgAuthorizeAccount.Unmarshal(m, b)
}
func (m *MsgAuthorizeAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgAuthorizeAccount.Marshal(b, m, deterministic)
}
func (m *MsgAuthorizeAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthorizeAccount.Merge(m, src)
}
func (m *MsgAuthorizeAccount) XXX_Size() int {
	return xxx_messageInfo_MsgAuthorizeAccount.Size(m)
}
func (m *MsgAuthorizeAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthorizeAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthorizeAccount proto.InternalMessageInfo

type MsgTransfer struct {
	FromAddress          string   `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty" yaml:"from_address"`
	ToAddress            string   `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty" yaml:"to_address"`
	Coins                string   `protobuf:"bytes,3,opt,name=coins,proto3" json:"coins,omitempty" yaml:"coins"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgTransfer) Reset()         { *m = MsgTransfer{} }
func (m *MsgTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgTransfer) ProtoMessage()    {}
func (*MsgTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{18}
}
func (m *MsgTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgTransfer.Unmarshal(m, b)
}
func (m *MsgTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgTransfer.Marshal(b, m, deterministic)
}
func (m *MsgTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransfer.Merge(m, src)
}
func (m *MsgTransfer) XXX_Size() int {
	return xxx_messageInfo_MsgTransfer.Size(m)
}
func (m *MsgTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransfer proto.InternalMessageInfo

type MsgInviteReward struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" yaml:"address"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgInviteReward) Reset()         { *m = MsgInviteReward{} }
func (m *MsgInviteReward) String() string { return proto.CompactTextString(m) }
func (*MsgInviteReward) ProtoMessage()    {}
func (*MsgInviteReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{19}
}
func (m *MsgInviteReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgInviteReward.Unmarshal(m, b)
}
func (m *MsgInviteReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgInviteReward.Marshal(b, m, deterministic)
}
func (m *MsgInviteReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteReward.Merge(m, src)
}
func (m *MsgInviteReward) XXX_Size() int {
	return xxx_messageInfo_MsgInviteReward.Size(m)
}
func (m *MsgInviteReward) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteReward.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteReward proto.InternalMessageInfo

type MsgSpaceMinerReward struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" yaml:"address"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgSpaceMinerReward) Reset()         { *m = MsgSpaceMinerReward{} }
func (m *MsgSpaceMinerReward) String() string { return proto.CompactTextString(m) }
func (*MsgSpaceMinerReward) ProtoMessage()    {}
func (*MsgSpaceMinerReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{20}
}
func (m *MsgSpaceMinerReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSpaceMinerReward.Unmarshal(m, b)
}
func (m *MsgSpaceMinerReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSpaceMinerReward.Marshal(b, m, deterministic)
}
func (m *MsgSpaceMinerReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSpaceMinerReward.Merge(m, src)
}
func (m *MsgSpaceMinerReward) XXX_Size() int {
	return xxx_messageInfo_MsgSpaceMinerReward.Size(m)
}
func (m *MsgSpaceMinerReward) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSpaceMinerReward.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSpaceMinerReward proto.InternalMessageInfo

type MsgVoteCopyright struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" yaml:"address"`
	DataHash             string   `protobuf:"bytes,2,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty" yaml:"data_hash"`
	Power                string   `protobuf:"bytes,3,opt,name=power,proto3" json:"power,omitempty" yaml:"power"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgVoteCopyright) Reset()         { *m = MsgVoteCopyright{} }
func (m *MsgVoteCopyright) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCopyright) ProtoMessage()    {}
func (*MsgVoteCopyright) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{21}
}
func (m *MsgVoteCopyright) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgVoteCopyright.Unmarshal(m, b)
}
func (m *MsgVoteCopyright) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgVoteCopyright.Marshal(b, m, deterministic)
}
func (m *MsgVoteCopyright) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCopyright.Merge(m, src)
}
func (m *MsgVoteCopyright) XXX_Size() int {
	return xxx_messageInfo_MsgVoteCopyright.Size(m)
}
func (m *MsgVoteCopyright) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCopyright.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCopyright proto.InternalMessageInfo

type MsgEmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgEmptyResponse) Reset()         { *m = MsgEmptyResponse{} }
func (m *MsgEmptyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEmptyResponse) ProtoMessage()    {}
func (*MsgEmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{22}
}
func (m *MsgEmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgEmptyResponse.Unmarshal(m, b)
}
func (m *MsgEmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgEmptyResponse.Marshal(b, m, deterministic)
}
func (m *MsgEmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEmptyResponse.Merge(m, src)
}
func (m *MsgEmptyResponse) XXX_Size() int {
	return xxx_messageInfo_MsgEmptyResponse.Size(m)
}
func (m *MsgEmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEmptyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCrossChainOut)(nil), "copyright.v1beta1.MsgCrossChainOut")
	proto.RegisterType((*MsgCrossChainIn)(nil), "copyright.v1beta1.MsgCrossChainIn")
	proto.RegisterType((*MsgCopyrightBonusRear)(nil), "copyright.v1beta1.MsgCopyrightBonusRear")
	proto.RegisterType((*MsgDistributeCommunityReward)(nil), "copyright.v1beta1.MsgDistributeCommunityReward")
	proto.RegisterType((*MsgCreateCopyright)(nil), "copyright.v1beta1.MsgCreateCopyright")
	proto.RegisterType((*MsgRegisterCopyrightParty)(nil), "copyright.v1beta1.MsgRegisterCopyrightParty")
	proto.RegisterType((*MsgSpaceMiner)(nil), "copyright.v1beta1.MsgSpaceMiner")
	proto.RegisterType((*MsgDeflationVote)(nil), "copyright.v1beta1.MsgDeflationVote")
	proto.RegisterType((*MsgNftTransfer)(nil), "copyright.v1beta1.MsgNftTransfer")
	proto.RegisterType((*MsgInviteCode)(nil), "copyright.v1beta1.MsgInviteCode")
	proto.RegisterType((*MsgMortgage)(nil), "copyright.v1beta1.MsgMortgage")
	proto.RegisterType((*MsgEditorCopyright)(nil), "copyright.v1beta1.MsgEditorCopyright")
	proto.RegisterType((*MsgDeleteCopyright)(nil), "copyright.v1beta1.MsgDeleteCopyright")
	proto.RegisterType((*MsgCopyrightBonus)(nil), "copyright.v1beta1.MsgCopyrightBonus")
	proto.RegisterType((*MsgCopyrightComplain)(nil), "copyright.v1beta1.MsgCopyrightComplain")
	proto.RegisterType((*MsgComplainResponse)(nil), "copyright.v1beta1.MsgComplainResponse")
	proto.RegisterType((*MsgComplainVote)(nil), "copyright.v1beta1.MsgComplainVote")
	proto.RegisterType((*MsgAuthorizeAccount)(nil), "copyright.v1beta1.MsgAuthorizeAccount")
	proto.RegisterType((*MsgTransfer)(nil), "copyright.v1beta1.MsgTransfer")
	proto.RegisterType((*MsgInviteReward)(nil), "copyright.v1beta1.MsgInviteReward")
	proto.RegisterType((*MsgSpaceMinerReward)(nil), "copyright.v1beta1.MsgSpaceMinerReward")
	proto.RegisterType((*MsgVoteCopyright)(nil), "copyright.v1beta1.MsgVoteCopyright")
	proto.RegisterType((*MsgEmptyResponse)(nil), "copyright.v1beta1.MsgEmptyResponse")
}

func init() { proto.RegisterFile("tx.proto", fileDescriptor_0fd2153dc07d3b5c) }

var fileDescriptor_0fd2153dc07d3b5c = []byte{
	// 2156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4f, 0x8f, 0x1b, 0x49,
	0x15, 0x5f, 0xdb, 0xf3, 0xcf, 0xcf, 0x1e, 0xdb, 0xd3, 0xc9, 0x66, 0x9d, 0xb0, 0x6c, 0x0f, 0x15,
	0x36, 0x4c, 0xa4, 0x65, 0x46, 0x59, 0x56, 0x8a, 0x18, 0x09, 0x69, 0x27, 0x93, 0xa0, 0x1d, 0x09,
	0x67, 0xa3, 0x4a, 0x96, 0x15, 0xa0, 0x55, 0xab, 0xa6, 0xbb, 0xdc, 0xd3, 0xca, 0xb8, 0xab, 0xe9,
	0x2e, 0x27, 0x99, 0x95, 0x38, 0x70, 0x83, 0x03, 0x5c, 0xb9, 0xee, 0x01, 0x3e, 0x00, 0x47, 0xee,
	0x1c, 0x11, 0x42, 0xe2, 0x6e, 0x71, 0x02, 0xce, 0xfe, 0x02, 0xa0, 0xfa, 0xd3, 0xdd, 0xd5, 0x6d,
	0x77, 0xa6, 0x3d, 0x11, 0x68, 0x6f, 0xae, 0xf7, 0x7b, 0xf5, 0xaa, 0xdf, 0xaf, 0xde, 0x7b, 0xf5,
	0xaa, 0x0c, 0x5b, 0xfc, 0xd5, 0x7e, 0x14, 0x33, 0xce, 0xac, 0x1d, 0x97, 0x45, 0x17, 0x71, 0xe0,
	0x9f, 0xf1, 0xfd, 0x17, 0xf7, 0x4e, 0x29, 0x27, 0xf7, 0x6e, 0x5d, 0xf7, 0x99, 0xcf, 0x24, 0x7a,
	0x20, 0x7e, 0x29, 0x45, 0xf4, 0xbb, 0x26, 0x0c, 0x46, 0x89, 0x7f, 0x1c, 0xb3, 0x24, 0x39, 0x3e,
	0x23, 0x41, 0xf8, 0xe9, 0x94, 0x5b, 0x87, 0xd0, 0x4d, 0x68, 0xe8, 0x39, 0xc4, 0xf3, 0x62, 0x9a,
	0x24, 0xc3, 0xc6, 0x6e, 0x63, 0xaf, 0xfd, 0xe0, 0x9d, 0xf9, 0xcc, 0xbe, 0x76, 0x41, 0x26, 0xe7,
	0x87, 0xc8, 0x44, 0x11, 0xee, 0x88, 0xe1, 0x91, 0x1a, 0x59, 0x1f, 0x01, 0x70, 0x96, 0xcd, 0x6c,
	0xca, 0x99, 0x6f, 0xcf, 0x67, 0xf6, 0x8e, 0x9a, 0x99, 0x63, 0x08, 0xb7, 0x39, 0x4b, 0x67, 0xdd,
	0x81, 0x75, 0x97, 0x05, 0x61, 0x32, 0x6c, 0xc9, 0x09, 0x83, 0xf9, 0xcc, 0xee, 0xaa, 0x09, 0x52,
	0x8c, 0xb0, 0x82, 0x85, 0x75, 0x57, 0x7c, 0xa5, 0xc3, 0x2f, 0x22, 0x3a, 0x5c, 0x2b, 0x5b, 0xcf,
	0x31, 0x84, 0xdb, 0x72, 0xf0, 0xec, 0x22, 0xa2, 0xd6, 0x5d, 0xd8, 0x88, 0xe9, 0x84, 0xc4, 0xcf,
	0x87, 0xeb, 0x72, 0xc6, 0xce, 0x7c, 0x66, 0x6f, 0xab, 0x19, 0x4a, 0x8e, 0xb0, 0x56, 0x38, 0xdc,
	0xfa, 0xd5, 0x57, 0xf6, 0x5b, 0xff, 0xfe, 0xca, 0x7e, 0x0b, 0xfd, 0xa3, 0x01, 0xfd, 0x02, 0x33,
	0x27, 0xe1, 0x02, 0x31, 0xcd, 0x15, 0x88, 0xf9, 0x1a, 0xba, 0xf8, 0xb7, 0x06, 0xbc, 0x2d, 0x5c,
	0x4c, 0x63, 0xe5, 0x01, 0x0b, 0xa7, 0x09, 0xa6, 0x24, 0xb6, 0x0e, 0x60, 0xcb, 0x23, 0x9c, 0x9c,
	0x91, 0xe4, 0x4c, 0xef, 0xfe, 0xb5, 0xf9, 0xcc, 0xee, 0x2b, 0x83, 0x29, 0x82, 0x70, 0xa6, 0x64,
	0x7d, 0x00, 0x9b, 0x6e, 0x4c, 0x09, 0x67, 0xb1, 0x26, 0xc5, 0x9a, 0xcf, 0xec, 0x9e, 0xfe, 0x64,
	0x05, 0x20, 0x9c, 0xaa, 0x58, 0x8f, 0xe1, 0x1a, 0x1b, 0x8f, 0x69, 0xec, 0x10, 0xd7, 0x65, 0xd3,
	0x90, 0x3b, 0xc9, 0x19, 0x89, 0xa9, 0x66, 0xe6, 0xbd, 0xf9, 0xcc, 0xbe, 0xa5, 0x66, 0x2e, 0x51,
	0x42, 0x78, 0x47, 0x4a, 0x8f, 0x94, 0xf0, 0xa9, 0x90, 0x19, 0x2e, 0xfd, 0xb2, 0x01, 0xef, 0x8e,
	0x12, 0xff, 0x61, 0x90, 0xf0, 0x38, 0x38, 0x9d, 0x72, 0x7a, 0xcc, 0x26, 0x93, 0x69, 0x18, 0xf0,
	0x0b, 0x4c, 0x5f, 0x92, 0xd8, 0x13, 0x1f, 0x5a, 0x0c, 0x6b, 0xe3, 0x43, 0xb3, 0x8d, 0x4b, 0x55,
	0x04, 0xad, 0x64, 0x22, 0xd6, 0xd1, 0x5e, 0x19, 0xb4, 0x2a, 0x39, 0xc2, 0x5a, 0xc1, 0xf8, 0x86,
	0xdf, 0x6c, 0x82, 0x25, 0x23, 0x87, 0x12, 0xb1, 0xbe, 0x26, 0x77, 0x75, 0x4e, 0xef, 0xc0, 0x7a,
	0x14, 0x07, 0x2e, 0xd5, 0x6b, 0x1b, 0x11, 0x23, 0xc5, 0x08, 0x2b, 0xd8, 0xe4, 0xbe, 0x75, 0x39,
	0xf7, 0x3f, 0x80, 0xed, 0x98, 0x26, 0x6c, 0x1a, 0xbb, 0xd4, 0x0c, 0xb1, 0xe1, 0x7c, 0x66, 0x5f,
	0x4f, 0x03, 0xc6, 0x80, 0x11, 0xee, 0xa6, 0x63, 0x19, 0x68, 0xfb, 0xb0, 0x15, 0xc5, 0xd4, 0x91,
	0x5e, 0xac, 0x97, 0xbd, 0x48, 0x11, 0x84, 0x37, 0xa3, 0x98, 0x7e, 0x22, 0x9c, 0xb8, 0x0d, 0x6b,
	0x21, 0x99, 0xd0, 0xe1, 0x86, 0xd4, 0xed, 0xcf, 0x67, 0x76, 0x47, 0xe9, 0x0a, 0x29, 0xc2, 0x12,
	0x14, 0x9e, 0x8e, 0x83, 0x73, 0x9a, 0x0c, 0x37, 0x77, 0x1b, 0x7b, 0x5d, 0xd3, 0x53, 0x29, 0x46,
	0x58, 0xc1, 0xc2, 0x58, 0x12, 0x7c, 0x49, 0x87, 0x5b, 0xbb, 0x8d, 0xbd, 0x96, 0x69, 0x4c, 0x48,
	0x11, 0x96, 0xa0, 0x75, 0x1f, 0x3a, 0xd2, 0x57, 0xea, 0xf0, 0x60, 0x42, 0x87, 0xed, 0xdd, 0xc6,
	0xde, 0xfa, 0x83, 0x1b, 0xf3, 0x99, 0x6d, 0x19, 0x94, 0x28, 0x10, 0x61, 0x50, 0xa3, 0x67, 0xc1,
	0x84, 0x8a, 0x0d, 0x8a, 0x48, 0x92, 0xbc, 0x64, 0xb1, 0x37, 0x84, 0x05, 0xd7, 0x34, 0x82, 0x70,
	0xa6, 0x24, 0x57, 0x3a, 0x23, 0xb1, 0x4f, 0x9d, 0x98, 0x70, 0x3a, 0xec, 0xc8, 0x39, 0xe6, 0x4a,
	0x39, 0x28, 0x56, 0x92, 0x23, 0x4c, 0x38, 0xb5, 0xbe, 0x09, 0xcd, 0x20, 0x1a, 0x76, 0xa5, 0xfe,
	0xf6, 0x7c, 0x66, 0xb7, 0x95, 0x7e, 0x10, 0x21, 0xdc, 0x0c, 0x22, 0xeb, 0x11, 0x0c, 0x58, 0x1c,
	0xf8, 0x41, 0xe8, 0x88, 0x58, 0x50, 0x5c, 0x6f, 0x4b, 0xe5, 0x6f, 0xcc, 0x67, 0xf6, 0x3b, 0x3a,
	0x37, 0x4a, 0x1a, 0x08, 0xf7, 0x94, 0xe8, 0x21, 0xe1, 0x44, 0x52, 0x7f, 0x08, 0x5d, 0xf7, 0x9c,
	0x24, 0x49, 0x30, 0xbe, 0x70, 0xa6, 0x81, 0x37, 0xec, 0x49, 0xd6, 0x8c, 0x6a, 0x65, 0xa2, 0x08,
	0x77, 0xd2, 0xe1, 0x67, 0x81, 0x67, 0xed, 0x42, 0x8b, 0xbe, 0xe2, 0xc3, 0xbe, 0x5c, 0xb5, 0x37,
	0x9f, 0xd9, 0xa0, 0xa6, 0xd0, 0x57, 0x1c, 0x61, 0x01, 0x59, 0xdf, 0x85, 0xcd, 0xf3, 0x20, 0x7c,
	0x3e, 0x22, 0xd1, 0x70, 0x20, 0x77, 0xcd, 0x20, 0x4b, 0x00, 0xce, 0x84, 0x44, 0x08, 0xa7, 0x3a,
	0xa2, 0xac, 0xbd, 0x08, 0x3c, 0xca, 0x94, 0x37, 0x3b, 0xe5, 0xb2, 0x96, 0x63, 0x08, 0xb7, 0xe5,
	0x40, 0xba, 0xf0, 0x7d, 0xe8, 0x46, 0x81, 0xeb, 0xa4, 0xf6, 0x86, 0x96, 0x5c, 0xc9, 0x70, 0xc1,
	0x44, 0x11, 0x86, 0x28, 0x70, 0x7f, 0xa4, 0x16, 0x34, 0xf2, 0xf1, 0x5f, 0x0d, 0xb8, 0x39, 0x4a,
	0x7c, 0x4c, 0xfd, 0x20, 0xe1, 0x34, 0xce, 0x32, 0xf2, 0x09, 0x89, 0xf9, 0x85, 0xdc, 0x0b, 0x4f,
	0x27, 0xa4, 0xb9, 0x17, 0x9e, 0xd8, 0x0b, 0x4f, 0x84, 0x66, 0x10, 0xf2, 0x98, 0x2d, 0x26, 0xa1,
	0x14, 0x23, 0xac, 0x60, 0x59, 0x29, 0xa6, 0xfc, 0x2c, 0xcb, 0x41, 0xb3, 0x52, 0x48, 0xb9, 0xa8,
	0x14, 0xf2, 0x87, 0x99, 0xaf, 0x6b, 0x97, 0xe7, 0xab, 0xde, 0x89, 0x8d, 0xca, 0x9d, 0x30, 0x3c,
	0xfd, 0x6b, 0x03, 0xb6, 0x47, 0x89, 0xff, 0x34, 0x22, 0x2e, 0x1d, 0x05, 0x21, 0x2d, 0xac, 0xd5,
	0xb8, 0x7c, 0xad, 0x1f, 0xc2, 0xc0, 0xa3, 0xe3, 0x73, 0xc2, 0x03, 0x16, 0x3a, 0x85, 0xc2, 0x67,
	0x04, 0x5e, 0x59, 0x03, 0xe1, 0x7e, 0x26, 0x3a, 0x92, 0x12, 0x51, 0x63, 0x88, 0xa8, 0xb6, 0x69,
	0xe9, 0xd6, 0x9c, 0x18, 0x35, 0xa6, 0x00, 0x23, 0xdc, 0x95, 0x63, 0x5d, 0xd3, 0x0d, 0x87, 0xa6,
	0xb2, 0x3b, 0x79, 0x98, 0x9a, 0xff, 0x31, 0xe3, 0x74, 0x45, 0x97, 0xee, 0xc2, 0x06, 0x8b, 0xc4,
	0xdc, 0xc5, 0x0a, 0xae, 0xe4, 0x08, 0x6b, 0x05, 0x63, 0xd9, 0xdf, 0x36, 0xa0, 0x37, 0x4a, 0xfc,
	0xc7, 0x63, 0xfe, 0x2c, 0x26, 0x61, 0x32, 0xa6, 0xb1, 0x28, 0x3d, 0xe3, 0x98, 0x4d, 0xf4, 0x92,
	0x46, 0xe9, 0x11, 0x52, 0x84, 0x25, 0x28, 0x62, 0x89, 0xa7, 0x91, 0x62, 0xc4, 0x12, 0x67, 0x08,
	0x37, 0x39, 0x13, 0xb5, 0x93, 0xb3, 0xe7, 0x34, 0x74, 0x02, 0x4f, 0x33, 0x62, 0xe4, 0x4c, 0x8a,
	0x20, 0xbc, 0x29, 0x7f, 0x9e, 0x78, 0xc6, 0x07, 0xfd, 0x49, 0x6d, 0xec, 0x49, 0xf8, 0x22, 0x10,
	0x47, 0x8a, 0x27, 0x59, 0x38, 0xaa, 0x3a, 0xc7, 0x8e, 0xb2, 0x73, 0x2c, 0x6d, 0x3e, 0xee, 0x43,
	0x27, 0x90, 0x73, 0x1d, 0x97, 0x79, 0xe9, 0x81, 0x62, 0x54, 0x2a, 0x03, 0x44, 0x18, 0x82, 0x7c,
	0x99, 0x7c, 0xa2, 0x2c, 0xa6, 0x2d, 0x59, 0x42, 0x16, 0x27, 0xea, 0x62, 0xaa, 0x46, 0xa2, 0x98,
	0x9a, 0x5d, 0xc6, 0x1a, 0x74, 0x46, 0x89, 0x3f, 0x62, 0x31, 0xf7, 0x89, 0x4f, 0xad, 0x63, 0xe8,
	0x4f, 0x58, 0xcc, 0x89, 0x4f, 0xb3, 0xf0, 0x50, 0x1e, 0xdc, 0x9a, 0xcf, 0xec, 0x1b, 0xca, 0x6c,
	0x49, 0x01, 0xe1, 0x9e, 0x96, 0xe8, 0x10, 0xb1, 0xee, 0x41, 0x3b, 0xaf, 0x8d, 0xca, 0x9d, 0xeb,
	0xf3, 0x99, 0x3d, 0xc8, 0x4f, 0x53, 0xc7, 0x38, 0x4e, 0x65, 0x2d, 0x39, 0x86, 0x7e, 0xd6, 0x15,
	0x3b, 0xea, 0x60, 0x6d, 0x95, 0xd7, 0x2d, 0x29, 0x20, 0xdc, 0xcb, 0x24, 0x4f, 0xca, 0x67, 0x6d,
	0x8d, 0xdc, 0x2d, 0x1d, 0x45, 0xeb, 0x65, 0xf6, 0x2a, 0x8f, 0x22, 0xcd, 0x91, 0x2f, 0x39, 0x50,
	0x79, 0xb8, 0xb1, 0x8c, 0x23, 0x43, 0x41, 0x73, 0x24, 0x24, 0x3a, 0x0b, 0x2b, 0xba, 0xac, 0xcd,
	0x2b, 0x76, 0x59, 0xd6, 0x27, 0xb0, 0x93, 0x11, 0x9b, 0x6d, 0xdd, 0x96, 0xb4, 0xf6, 0xee, 0x7c,
	0x66, 0x0f, 0x4b, 0xdc, 0xe7, 0x9b, 0xd7, 0x4f, 0xf7, 0x20, 0xdd, 0xbd, 0x8f, 0x00, 0x4e, 0x45,
	0xaf, 0xa9, 0x1a, 0x90, 0x76, 0xf9, 0x30, 0xc8, 0x31, 0x84, 0xdb, 0x72, 0x20, 0x5a, 0x0f, 0x23,
	0xa4, 0xfe, 0xdc, 0x94, 0x1d, 0xd6, 0x23, 0x2f, 0xe0, 0x2c, 0xfe, 0xda, 0x75, 0x58, 0x69, 0xcb,
	0xb3, 0xf6, 0xba, 0x96, 0xa7, 0xd4, 0x3b, 0xac, 0xaf, 0xd8, 0x3b, 0x6c, 0x54, 0xf5, 0x0e, 0xbb,
	0xd0, 0x1a, 0xd3, 0x74, 0x93, 0x8d, 0xe3, 0x62, 0x4c, 0x29, 0xc2, 0x02, 0x32, 0x68, 0xfc, 0x85,
	0x64, 0xf1, 0x21, 0x3d, 0xa7, 0x6f, 0xd4, 0xa7, 0xae, 0xd4, 0xfb, 0x1b, 0xcb, 0xff, 0xa5, 0x09,
	0x3b, 0x0b, 0xd7, 0x8f, 0xff, 0xf5, 0xd5, 0x63, 0x69, 0x10, 0xb7, 0xae, 0x12, 0xc4, 0x15, 0xe9,
	0xb5, 0x76, 0xd5, 0xf4, 0x2a, 0x26, 0xc5, 0xfa, 0xca, 0x49, 0xf1, 0xcf, 0x35, 0xb8, 0x6e, 0xd2,
	0x79, 0xcc, 0x26, 0xd1, 0x39, 0x09, 0xc2, 0xd5, 0x19, 0xcd, 0x7b, 0x99, 0xe6, 0x65, 0xbd, 0xcc,
	0x87, 0xd0, 0x8e, 0x62, 0xe6, 0x4d, 0xdd, 0x3c, 0x37, 0x8c, 0x3a, 0x9c, 0x41, 0x08, 0xe7, 0x6a,
	0xa2, 0x2f, 0x3d, 0xa7, 0x3e, 0x39, 0x77, 0xc2, 0xe9, 0xe4, 0x94, 0xa6, 0x85, 0xd4, 0x68, 0xea,
	0x4c, 0x14, 0xe1, 0x8e, 0x1c, 0x3e, 0x96, 0x23, 0x41, 0x92, 0x42, 0xb3, 0x82, 0x5a, 0x20, 0x29,
	0xc7, 0x10, 0x6e, 0xcb, 0x81, 0x2c, 0xa7, 0x1f, 0x43, 0xcf, 0xd5, 0x6c, 0x38, 0x41, 0x38, 0x66,
	0xb1, 0xce, 0x9f, 0x9b, 0xf3, 0x99, 0xfd, 0x76, 0x5a, 0xf9, 0x4d, 0x1c, 0xe1, 0xed, 0x54, 0x70,
	0x22, 0xc6, 0xa2, 0x33, 0xca, 0x34, 0xd2, 0xa8, 0xd9, 0x2c, 0x77, 0x46, 0x65, 0x0d, 0x84, 0xfb,
	0xa9, 0x28, 0x0d, 0x9a, 0x8f, 0xa1, 0x47, 0x5c, 0x77, 0x9a, 0xd0, 0x52, 0x01, 0x35, 0xbe, 0xa4,
	0x88, 0x23, 0xbc, 0xad, 0x04, 0xa9, 0x05, 0x51, 0x38, 0xb2, 0x6f, 0xf5, 0x74, 0xf1, 0x34, 0x0b,
	0x47, 0x0e, 0x8a, 0xc2, 0x91, 0x7a, 0xe1, 0x89, 0xa6, 0x2c, 0xc3, 0x24, 0x7b, 0x20, 0x8f, 0x23,
	0xa3, 0x29, 0x2b, 0xc0, 0x08, 0x77, 0xd3, 0x71, 0xe9, 0x40, 0xff, 0x7d, 0x0b, 0xae, 0xc9, 0x40,
	0x53, 0x28, 0xa6, 0x49, 0xc4, 0xc2, 0x84, 0xae, 0x1e, 0x67, 0xf7, 0xa0, 0x1d, 0xd3, 0x09, 0xe3,
	0xd4, 0x09, 0xa2, 0xc5, 0x43, 0x3c, 0x83, 0x10, 0xde, 0x52, 0xbf, 0x4f, 0x22, 0x11, 0x3b, 0x9a,
	0x1f, 0xb5, 0x8f, 0xad, 0x72, 0xec, 0x98, 0x28, 0xc2, 0x1d, 0x35, 0x54, 0x7b, 0xb8, 0xc8, 0xfd,
	0xda, 0x9b, 0x71, 0xbf, 0xbe, 0x0a, 0xf7, 0xb1, 0xa6, 0x49, 0x71, 0xbf, 0x51, 0xe6, 0xbe, 0x00,
	0xab, 0x4b, 0xb7, 0x1c, 0xcb, 0xf8, 0xbd, 0x0b, 0x1b, 0x09, 0x27, 0x7c, 0x9a, 0xe8, 0x98, 0x33,
	0x12, 0x52, 0xc9, 0x11, 0xd6, 0x0a, 0xc6, 0x36, 0xfd, 0x47, 0x3f, 0x60, 0xe9, 0xaf, 0x90, 0xbd,
	0xf3, 0x21, 0x74, 0x5f, 0x08, 0x52, 0x8b, 0x8d, 0x97, 0x41, 0x9f, 0x89, 0x22, 0xdc, 0x11, 0xc3,
	0x0a, 0xe7, 0x9b, 0xb5, 0x9d, 0xbf, 0x0f, 0xd2, 0x8e, 0xa3, 0x5d, 0x68, 0x95, 0x27, 0x1a, 0x20,
	0xc2, 0x20, 0x46, 0x4f, 0xe5, 0x40, 0xde, 0x19, 0x05, 0x16, 0xb1, 0x97, 0x59, 0x99, 0x30, 0xef,
	0x8c, 0x19, 0x26, 0xee, 0x8c, 0x8c, 0xd3, 0x27, 0xe2, 0xb7, 0xc1, 0xc0, 0xdf, 0x1b, 0x32, 0x50,
	0x8f, 0x64, 0xa9, 0x0a, 0xbe, 0x34, 0x9b, 0x47, 0x97, 0x85, 0x89, 0x7c, 0xa8, 0xd3, 0x14, 0x18,
	0x71, 0x97, 0x41, 0x08, 0x6f, 0x89, 0xdf, 0xa2, 0x87, 0x96, 0xcf, 0x46, 0x9a, 0xb3, 0x85, 0x43,
	0x26, 0xa3, 0x2b, 0x55, 0x51, 0xef, 0x14, 0x7e, 0xa8, 0x5d, 0x2d, 0xbc, 0x53, 0xf8, 0xa1, 0x7c,
	0xa7, 0xf0, 0x43, 0x61, 0x72, 0x44, 0x93, 0x84, 0xf8, 0x74, 0xb1, 0x95, 0x9c, 0x28, 0x00, 0xe1,
	0x54, 0xc5, 0xf0, 0xea, 0x8f, 0x0d, 0xd9, 0x4f, 0x67, 0x37, 0x93, 0x43, 0xe8, 0x8a, 0xcb, 0x47,
	0xf5, 0x6b, 0xad, 0x89, 0x22, 0xdc, 0x11, 0xc3, 0xff, 0xcb, 0x6b, 0xad, 0xf1, 0xcd, 0x27, 0x32,
	0x14, 0xd5, 0xf5, 0xe5, 0x2a, 0x0f, 0x71, 0x86, 0xa9, 0x91, 0xdc, 0xd3, 0xfc, 0x8a, 0xfb, 0x86,
	0xe6, 0xfe, 0xd0, 0x90, 0x57, 0x4c, 0x91, 0x1d, 0x79, 0x0b, 0xb4, 0xda, 0x23, 0xe1, 0x15, 0xee,
	0x22, 0xa2, 0xf1, 0x94, 0x41, 0xbd, 0xc0, 0xa0, 0x8e, 0x67, 0x05, 0x1b, 0xdf, 0x69, 0xc9, 0xcf,
	0x7c, 0x34, 0x89, 0xf8, 0x45, 0x5a, 0x70, 0x3f, 0xfc, 0xf5, 0x00, 0x5a, 0xa3, 0xc4, 0xb7, 0xbe,
	0x80, 0x7e, 0xf9, 0xb1, 0xf1, 0xfd, 0xfd, 0x85, 0x7f, 0x00, 0xf6, 0x17, 0xdf, 0x24, 0x6f, 0xdd,
	0x5e, 0xae, 0x56, 0x58, 0xc6, 0x7a, 0x0e, 0x37, 0x2a, 0xde, 0x4e, 0x3e, 0x58, 0x3e, 0x7d, 0xb9,
	0x76, 0xbd, 0xc5, 0x9e, 0x02, 0x18, 0xcf, 0x17, 0xbb, 0xcb, 0xa7, 0xe4, 0x1a, 0xf5, 0x8c, 0xfe,
	0x04, 0xb6, 0x8b, 0x6f, 0x08, 0x15, 0xb3, 0x0a, 0x4a, 0xf5, 0x4c, 0x7f, 0x06, 0x1d, 0xf3, 0x99,
	0xe0, 0x5b, 0xcb, 0xe7, 0x18, 0x2a, 0xb5, 0x69, 0x30, 0x2e, 0xfb, 0x15, 0x34, 0xe4, 0x1a, 0xf5,
	0x8c, 0xfe, 0x1c, 0x6e, 0x56, 0x3f, 0x8c, 0x1f, 0x54, 0x50, 0x52, 0x35, 0xa1, 0xde, 0x92, 0x9f,
	0xc2, 0x56, 0x76, 0xf1, 0x7f, 0x6f, 0xf9, 0x84, 0x14, 0xaf, 0x67, 0xf0, 0x0b, 0xe8, 0x97, 0xaf,
	0x7d, 0x15, 0xb1, 0x5e, 0x52, 0xab, 0x6d, 0xbe, 0x7c, 0x1f, 0x7a, 0xbf, 0x2a, 0x56, 0x0a, 0x6a,
	0xf5, 0xcc, 0xff, 0x0c, 0x7a, 0xa5, 0xeb, 0xce, 0xb7, 0x2b, 0x12, 0xb5, 0xa0, 0x55, 0xcf, 0x38,
	0x81, 0x9d, 0xc5, 0xe6, 0xff, 0x3b, 0x97, 0xd8, 0x4f, 0x15, 0xeb, 0x2d, 0xe1, 0xc0, 0x60, 0xa1,
	0xed, 0xbb, 0x53, 0xb5, 0x42, 0x51, 0xaf, 0xde, 0x02, 0x9f, 0x43, 0xb7, 0xd0, 0xb0, 0xa0, 0xd7,
	0x1b, 0xaf, 0x9f, 0xa7, 0x0e, 0x0c, 0x16, 0xfa, 0x80, 0x8a, 0x2f, 0x2f, 0xeb, 0xd5, 0x8e, 0xf4,
	0xac, 0x0a, 0x54, 0x44, 0xfa, 0x6a, 0x25, 0xe0, 0x73, 0xe8, 0x16, 0x0e, 0x4c, 0xf4, 0xba, 0x22,
	0xb0, 0x4a, 0x4e, 0x3a, 0x30, 0x58, 0x38, 0x3e, 0xef, 0x5c, 0x56, 0x68, 0x57, 0x59, 0xc0, 0x05,
	0x6b, 0xc9, 0x7f, 0x8a, 0x7b, 0x75, 0x22, 0x5d, 0x68, 0xd6, 0xae, 0xe9, 0xd9, 0xd4, 0xd7, 0xd5,
	0xf4, 0xc2, 0xc9, 0x5e, 0xdf, 0x74, 0xe1, 0x0f, 0xf1, 0xdb, 0x55, 0xa7, 0xa9, 0xa1, 0x54, 0x3f,
	0xbe, 0xcd, 0x7f, 0x94, 0xd1, 0x65, 0x96, 0x4f, 0xea, 0x65, 0xe6, 0x83, 0x6b, 0x3f, 0xdd, 0x79,
	0x75, 0x90, 0xe9, 0x1d, 0xf0, 0x8b, 0x88, 0x26, 0xa7, 0x1b, 0xf2, 0x4f, 0xfe, 0xef, 0xfd, 0x37,
	0x00, 0x00, 0xff, 0xff, 0x7f, 0x48, 0x8a, 0x88, 0x19, 0x20, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateCopyright(ctx context.Context, in *MsgCreateCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	RegisterCopyrightParty(ctx context.Context, in *MsgRegisterCopyrightParty, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	SpaceMiner(ctx context.Context, in *MsgSpaceMiner, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	DeflationVote(ctx context.Context, in *MsgDeflationVote, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	NftTransfer(ctx context.Context, in *MsgNftTransfer, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	InviteCode(ctx context.Context, in *MsgInviteCode, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	DistributeCommunityReward(ctx context.Context, in *MsgDistributeCommunityReward, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	Mortgage(ctx context.Context, in *MsgMortgage, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	EditorCopyright(ctx context.Context, in *MsgEditorCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	DeleteCopyright(ctx context.Context, in *MsgDeleteCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	CopyrightBonus(ctx context.Context, in *MsgCopyrightBonus, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	CopyrightComplain(ctx context.Context, in *MsgCopyrightComplain, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	ComplainResponse(ctx context.Context, in *MsgComplainResponse, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	ComplainVote(ctx context.Context, in *MsgComplainVote, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	AuthorizeAccount(ctx context.Context, in *MsgAuthorizeAccount, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	Transfer(ctx context.Context, in *MsgTransfer, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	InviteReward(ctx context.Context, in *MsgInviteReward, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	SpaceMinerReward(ctx context.Context, in *MsgSpaceMinerReward, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	CopyrightBonusRear(ctx context.Context, in *MsgCopyrightBonusRear, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	CopyrightVote(ctx context.Context, in *MsgVoteCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	CrossChainOut(ctx context.Context, in *MsgCrossChainOut, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
	CrossChainIn(ctx context.Context, in *MsgCrossChainIn, opts ...grpc.CallOption) (*MsgEmptyResponse, error)
}

type msgClient struct {
	cc *grpc.ClientConn
}

func NewMsgClient(cc *grpc.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateCopyright(ctx context.Context, in *MsgCreateCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CreateCopyright", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterCopyrightParty(ctx context.Context, in *MsgRegisterCopyrightParty, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/RegisterCopyrightParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SpaceMiner(ctx context.Context, in *MsgSpaceMiner, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/SpaceMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeflationVote(ctx context.Context, in *MsgDeflationVote, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/DeflationVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) NftTransfer(ctx context.Context, in *MsgNftTransfer, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/NftTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InviteCode(ctx context.Context, in *MsgInviteCode, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/InviteCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DistributeCommunityReward(ctx context.Context, in *MsgDistributeCommunityReward, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/DistributeCommunityReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Mortgage(ctx context.Context, in *MsgMortgage, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/Mortgage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditorCopyright(ctx context.Context, in *MsgEditorCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/EditorCopyright", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCopyright(ctx context.Context, in *MsgDeleteCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/DeleteCopyright", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CopyrightBonus(ctx context.Context, in *MsgCopyrightBonus, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CopyrightBonus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CopyrightComplain(ctx context.Context, in *MsgCopyrightComplain, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CopyrightComplain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ComplainResponse(ctx context.Context, in *MsgComplainResponse, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/ComplainResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ComplainVote(ctx context.Context, in *MsgComplainVote, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/ComplainVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AuthorizeAccount(ctx context.Context, in *MsgAuthorizeAccount, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/AuthorizeAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Transfer(ctx context.Context, in *MsgTransfer, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InviteReward(ctx context.Context, in *MsgInviteReward, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/InviteReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SpaceMinerReward(ctx context.Context, in *MsgSpaceMinerReward, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/SpaceMinerReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CopyrightBonusRear(ctx context.Context, in *MsgCopyrightBonusRear, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CopyrightBonusRear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CopyrightVote(ctx context.Context, in *MsgVoteCopyright, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CopyrightVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CrossChainOut(ctx context.Context, in *MsgCrossChainOut, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CrossChainOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CrossChainIn(ctx context.Context, in *MsgCrossChainIn, opts ...grpc.CallOption) (*MsgEmptyResponse, error) {
	out := new(MsgEmptyResponse)
	err := c.cc.Invoke(ctx, "/copyright.v1beta1.Msg/CrossChainIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateCopyright(context.Context, *MsgCreateCopyright) (*MsgEmptyResponse, error)
	RegisterCopyrightParty(context.Context, *MsgRegisterCopyrightParty) (*MsgEmptyResponse, error)
	SpaceMiner(context.Context, *MsgSpaceMiner) (*MsgEmptyResponse, error)
	DeflationVote(context.Context, *MsgDeflationVote) (*MsgEmptyResponse, error)
	NftTransfer(context.Context, *MsgNftTransfer) (*MsgEmptyResponse, error)
	InviteCode(context.Context, *MsgInviteCode) (*MsgEmptyResponse, error)
	DistributeCommunityReward(context.Context, *MsgDistributeCommunityReward) (*MsgEmptyResponse, error)
	Mortgage(context.Context, *MsgMortgage) (*MsgEmptyResponse, error)
	EditorCopyright(context.Context, *MsgEditorCopyright) (*MsgEmptyResponse, error)
	DeleteCopyright(context.Context, *MsgDeleteCopyright) (*MsgEmptyResponse, error)
	CopyrightBonus(context.Context, *MsgCopyrightBonus) (*MsgEmptyResponse, error)
	CopyrightComplain(context.Context, *MsgCopyrightComplain) (*MsgEmptyResponse, error)
	ComplainResponse(context.Context, *MsgComplainResponse) (*MsgEmptyResponse, error)
	ComplainVote(context.Context, *MsgComplainVote) (*MsgEmptyResponse, error)
	AuthorizeAccount(context.Context, *MsgAuthorizeAccount) (*MsgEmptyResponse, error)
	Transfer(context.Context, *MsgTransfer) (*MsgEmptyResponse, error)
	InviteReward(context.Context, *MsgInviteReward) (*MsgEmptyResponse, error)
	SpaceMinerReward(context.Context, *MsgSpaceMinerReward) (*MsgEmptyResponse, error)
	CopyrightBonusRear(context.Context, *MsgCopyrightBonusRear) (*MsgEmptyResponse, error)
	CopyrightVote(context.Context, *MsgVoteCopyright) (*MsgEmptyResponse, error)
	CrossChainOut(context.Context, *MsgCrossChainOut) (*MsgEmptyResponse, error)
	CrossChainIn(context.Context, *MsgCrossChainIn) (*MsgEmptyResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateCopyright(ctx context.Context, req *MsgCreateCopyright) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCopyright not implemented")
}
func (*UnimplementedMsgServer) RegisterCopyrightParty(ctx context.Context, req *MsgRegisterCopyrightParty) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterCopyrightParty not implemented")
}
func (*UnimplementedMsgServer) SpaceMiner(ctx context.Context, req *MsgSpaceMiner) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceMiner not implemented")
}
func (*UnimplementedMsgServer) DeflationVote(ctx context.Context, req *MsgDeflationVote) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeflationVote not implemented")
}
func (*UnimplementedMsgServer) NftTransfer(ctx context.Context, req *MsgNftTransfer) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NftTransfer not implemented")
}
func (*UnimplementedMsgServer) InviteCode(ctx context.Context, req *MsgInviteCode) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteCode not implemented")
}
func (*UnimplementedMsgServer) DistributeCommunityReward(ctx context.Context, req *MsgDistributeCommunityReward) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributeCommunityReward not implemented")
}
func (*UnimplementedMsgServer) Mortgage(ctx context.Context, req *MsgMortgage) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mortgage not implemented")
}
func (*UnimplementedMsgServer) EditorCopyright(ctx context.Context, req *MsgEditorCopyright) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditorCopyright not implemented")
}
func (*UnimplementedMsgServer) DeleteCopyright(ctx context.Context, req *MsgDeleteCopyright) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCopyright not implemented")
}
func (*UnimplementedMsgServer) CopyrightBonus(ctx context.Context, req *MsgCopyrightBonus) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyrightBonus not implemented")
}
func (*UnimplementedMsgServer) CopyrightComplain(ctx context.Context, req *MsgCopyrightComplain) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyrightComplain not implemented")
}
func (*UnimplementedMsgServer) ComplainResponse(ctx context.Context, req *MsgComplainResponse) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComplainResponse not implemented")
}
func (*UnimplementedMsgServer) ComplainVote(ctx context.Context, req *MsgComplainVote) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComplainVote not implemented")
}
func (*UnimplementedMsgServer) AuthorizeAccount(ctx context.Context, req *MsgAuthorizeAccount) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthorizeAccount not implemented")
}
func (*UnimplementedMsgServer) Transfer(ctx context.Context, req *MsgTransfer) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Transfer not implemented")
}
func (*UnimplementedMsgServer) InviteReward(ctx context.Context, req *MsgInviteReward) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteReward not implemented")
}
func (*UnimplementedMsgServer) SpaceMinerReward(ctx context.Context, req *MsgSpaceMinerReward) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceMinerReward not implemented")
}
func (*UnimplementedMsgServer) CopyrightBonusRear(ctx context.Context, req *MsgCopyrightBonusRear) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyrightBonusRear not implemented")
}
func (*UnimplementedMsgServer) CopyrightVote(ctx context.Context, req *MsgVoteCopyright) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyrightVote not implemented")
}
func (*UnimplementedMsgServer) CrossChainOut(ctx context.Context, req *MsgCrossChainOut) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CrossChainOut not implemented")
}
func (*UnimplementedMsgServer) CrossChainIn(ctx context.Context, req *MsgCrossChainIn) (*MsgEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CrossChainIn not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateCopyright_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCopyright)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCopyright(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CreateCopyright",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCopyright(ctx, req.(*MsgCreateCopyright))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterCopyrightParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterCopyrightParty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterCopyrightParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/RegisterCopyrightParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterCopyrightParty(ctx, req.(*MsgRegisterCopyrightParty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SpaceMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSpaceMiner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SpaceMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/SpaceMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SpaceMiner(ctx, req.(*MsgSpaceMiner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeflationVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeflationVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeflationVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/DeflationVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeflationVote(ctx, req.(*MsgDeflationVote))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_NftTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNftTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).NftTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/NftTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).NftTransfer(ctx, req.(*MsgNftTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InviteCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInviteCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InviteCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/InviteCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InviteCode(ctx, req.(*MsgInviteCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DistributeCommunityReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDistributeCommunityReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DistributeCommunityReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/DistributeCommunityReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DistributeCommunityReward(ctx, req.(*MsgDistributeCommunityReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Mortgage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMortgage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Mortgage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/Mortgage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Mortgage(ctx, req.(*MsgMortgage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditorCopyright_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditorCopyright)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditorCopyright(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/EditorCopyright",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditorCopyright(ctx, req.(*MsgEditorCopyright))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCopyright_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCopyright)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCopyright(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/DeleteCopyright",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCopyright(ctx, req.(*MsgDeleteCopyright))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CopyrightBonus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCopyrightBonus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CopyrightBonus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CopyrightBonus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CopyrightBonus(ctx, req.(*MsgCopyrightBonus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CopyrightComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCopyrightComplain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CopyrightComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CopyrightComplain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CopyrightComplain(ctx, req.(*MsgCopyrightComplain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ComplainResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgComplainResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ComplainResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/ComplainResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ComplainResponse(ctx, req.(*MsgComplainResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ComplainVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgComplainVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ComplainVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/ComplainVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ComplainVote(ctx, req.(*MsgComplainVote))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AuthorizeAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAuthorizeAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AuthorizeAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/AuthorizeAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AuthorizeAccount(ctx, req.(*MsgAuthorizeAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Transfer(ctx, req.(*MsgTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InviteReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInviteReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InviteReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/InviteReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InviteReward(ctx, req.(*MsgInviteReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SpaceMinerReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSpaceMinerReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SpaceMinerReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/SpaceMinerReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SpaceMinerReward(ctx, req.(*MsgSpaceMinerReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CopyrightBonusRear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCopyrightBonusRear)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CopyrightBonusRear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CopyrightBonusRear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CopyrightBonusRear(ctx, req.(*MsgCopyrightBonusRear))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CopyrightVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteCopyright)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CopyrightVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CopyrightVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CopyrightVote(ctx, req.(*MsgVoteCopyright))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CrossChainOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCrossChainOut)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CrossChainOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CrossChainOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CrossChainOut(ctx, req.(*MsgCrossChainOut))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CrossChainIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCrossChainIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CrossChainIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/copyright.v1beta1.Msg/CrossChainIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CrossChainIn(ctx, req.(*MsgCrossChainIn))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "copyright.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCopyright",
			Handler:    _Msg_CreateCopyright_Handler,
		},
		{
			MethodName: "RegisterCopyrightParty",
			Handler:    _Msg_RegisterCopyrightParty_Handler,
		},
		{
			MethodName: "SpaceMiner",
			Handler:    _Msg_SpaceMiner_Handler,
		},
		{
			MethodName: "DeflationVote",
			Handler:    _Msg_DeflationVote_Handler,
		},
		{
			MethodName: "NftTransfer",
			Handler:    _Msg_NftTransfer_Handler,
		},
		{
			MethodName: "InviteCode",
			Handler:    _Msg_InviteCode_Handler,
		},
		{
			MethodName: "DistributeCommunityReward",
			Handler:    _Msg_DistributeCommunityReward_Handler,
		},
		{
			MethodName: "Mortgage",
			Handler:    _Msg_Mortgage_Handler,
		},
		{
			MethodName: "EditorCopyright",
			Handler:    _Msg_EditorCopyright_Handler,
		},
		{
			MethodName: "DeleteCopyright",
			Handler:    _Msg_DeleteCopyright_Handler,
		},
		{
			MethodName: "CopyrightBonus",
			Handler:    _Msg_CopyrightBonus_Handler,
		},
		{
			MethodName: "CopyrightComplain",
			Handler:    _Msg_CopyrightComplain_Handler,
		},
		{
			MethodName: "ComplainResponse",
			Handler:    _Msg_ComplainResponse_Handler,
		},
		{
			MethodName: "ComplainVote",
			Handler:    _Msg_ComplainVote_Handler,
		},
		{
			MethodName: "AuthorizeAccount",
			Handler:    _Msg_AuthorizeAccount_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _Msg_Transfer_Handler,
		},
		{
			MethodName: "InviteReward",
			Handler:    _Msg_InviteReward_Handler,
		},
		{
			MethodName: "SpaceMinerReward",
			Handler:    _Msg_SpaceMinerReward_Handler,
		},
		{
			MethodName: "CopyrightBonusRear",
			Handler:    _Msg_CopyrightBonusRear_Handler,
		},
		{
			MethodName: "CopyrightVote",
			Handler:    _Msg_CopyrightVote_Handler,
		},
		{
			MethodName: "CrossChainOut",
			Handler:    _Msg_CrossChainOut_Handler,
		},
		{
			MethodName: "CrossChainIn",
			Handler:    _Msg_CrossChainIn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tx.proto",
}
